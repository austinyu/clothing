{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAZRSPA1RD6hjH3ThQ3U_rT32z5rH0Mp1Q\",\n  authDomain: \"crwn-clothing-db-2bfcc.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-2bfcc\",\n  storageBucket: \"crwn-clothing-db-2bfcc.appspot.com\",\n  messagingSenderId: \"1034424385686\",\n  appId: \"1:1034424385686:web:214faace27d46332dfc2b7\"\n}; // Initialize Firebase\n\nconst firebaseapp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nconst db = getFirestore();\n\nconst createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userDocRef;\n};","map":{"version":3,"sources":["/Users/Misaka/Vault/Grinnell/2021 Fall/Udemy SQL/React/react-app/clothings/clothing/src/utils/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseapp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message"],"mappings":"AAAA,SACIA,aADJ,QAEO,cAFP;AAGA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,QAKO,eALP;AAMA,SACIC,YADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,MAJJ,QAKO,oBALP,C,CASA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,wCAFO;AAGnBC,EAAAA,SAAS,EAAE,wBAHQ;AAInBC,EAAAA,aAAa,EAAE,oCAJI;AAKnBC,EAAAA,iBAAiB,EAAE,eALA;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAD,CAAjC;AAEA,MAAMQ,QAAQ,GAAG,IAAIb,kBAAJ,EAAjB;AACAa,QAAQ,CAACC,mBAAT,CAA6B;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAApB;AACP,OAAO,MAAMoB,qBAAqB,GAAG,MAAMlB,eAAe,CAACiB,IAAD,EAAOH,QAAP,CAAnD;AAEP,MAAMK,EAAE,GAAGjB,YAAY,EAAvB;;AAEA,MAAMkB,0BAA0B,GAAG,MAAOC,QAAP,IAAoB;AACnD,QAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;AACA,QAAMC,YAAY,GAAG,MAAMpB,MAAM,CAACkB,UAAD,CAAjC;;AACA,MAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;AACxB,UAAM;AACFC,MAAAA,WADE;AAEFC,MAAAA;AAFE,QAGFN,QAHJ;AAIA,UAAMO,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACA,YAAMxB,MAAM,CAACiB,UAAD,EAAa;AACrBI,QAAAA,WADqB;AAErBC,QAAAA,KAFqB;AAGrBC,QAAAA;AAHqB,OAAb,CAAZ;AAKH,KAND,CAME,OAAME,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AACD,SAAOX,UAAP;AACH,CApBD","sourcesContent":["import {\n    initializeApp\n} from \"firebase/app\";\nimport {\n    getAuth,\n    signInWithRedirect,\n    signInWithPopup,\n    GoogleAuthProvider\n} from 'firebase/auth';\nimport {\n    getFirestore,\n    doc,\n    getDoc,\n    setDoc,\n} from 'firebase/firestore'\n\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAZRSPA1RD6hjH3ThQ3U_rT32z5rH0Mp1Q\",\n    authDomain: \"crwn-clothing-db-2bfcc.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-2bfcc\",\n    storageBucket: \"crwn-clothing-db-2bfcc.appspot.com\",\n    messagingSenderId: \"1034424385686\",\n    appId: \"1:1034424385686:web:214faace27d46332dfc2b7\"\n};\n\n// Initialize Firebase\nconst firebaseapp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\nconst db = getFirestore()\n\nconst createUserDocumentFromAuth = async (userAuth) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n    const userSnapshot = await getDoc(userDocRef);\n    if (!userSnapshot.exists()) {\n        const {\n            displayName,\n            email\n        } = userAuth;\n        const createdAt = new Date();\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt\n            })\n        } catch(error) {\n            console.log('error creating user', error.message);\n        }\n    }\n    return userDocRef;\n}"]},"metadata":{},"sourceType":"module"}