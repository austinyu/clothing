{"ast":null,"code":"var _jsxFileName = \"/Users/Misaka/Vault/Grinnell/2021 Fall/Udemy SQL/React/react-app/clothings/clothing/src/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  if (cartItems.find(cartItem => cartItem.id === productToAdd.id)) {\n    return cartItems.map(cartItem => {\n      return cartItem.id === productToAdd.id ? { ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem;\n    });\n  } else {\n    return [...cartItems, { ...productToAdd,\n      quantity: 1\n    }];\n  }\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, cartItems);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/Misaka/Vault/Grinnell/2021 Fall/Udemy SQL/React/react-app/clothings/clothing/src/contexts/cart.context.jsx"],"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","find","cartItem","id","map","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","cartCount","CartProvider","children","setCartItems","setCartCount","newCartCount","reduce","total","value"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC/C,MAAID,SAAS,CAACE,IAAV,CAAgBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBH,YAAY,CAACG,EAA1D,CAAJ,EAAmE;AACjE,WAAOJ,SAAS,CAACK,GAAV,CAAeF,QAAD,IAAc;AACjC,aAAOA,QAAQ,CAACC,EAAT,KAAgBH,YAAY,CAACG,EAA7B,GACH,EAAE,GAAGD,QAAL;AAAeG,QAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,OADG,GAEHH,QAFJ;AAGD,KAJM,CAAP;AAKD,GAND,MAMO;AACL,WAAO,CAAC,GAAGH,SAAJ,EAAe,EAAE,GAAGC,YAAL;AAAmBK,MAAAA,QAAQ,EAAE;AAA7B,KAAf,CAAP;AACD;AACF,CAVD;;AAYA,OAAO,MAAMC,WAAW,gBAAGX,aAAa,CAAC;AACvCY,EAAAA,UAAU,EAAE,KAD2B;AAEvCC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAFgB;AAGvCT,EAAAA,SAAS,EAAE,EAH4B;AAIvCU,EAAAA,aAAa,EAAE,MAAM,CAAE,CAJgB;AAKvCC,EAAAA,SAAS,EAAE;AAL4B,CAAD,CAAjC;AAQP,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACL,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACG,SAAD,EAAYc,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,SAAD,EAAYI,YAAZ,IAA4BlB,QAAQ,CAAC,CAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,YAAY,GAAGhB,SAAS,CAACiB,MAAV,CACnB,CAACC,KAAD,EAAQf,QAAR,KAAqBe,KAAK,GAAGf,QAAQ,CAACG,QADnB,EAEnB,CAFmB,CAArB;AAIAS,IAAAA,YAAY,CAACC,YAAD,CAAZ;AACD,GANQ,EAMNhB,SANM,CAAT;;AAOA,QAAMU,aAAa,GAAIT,YAAD,IAAkB;AACtCa,IAAAA,YAAY,CAACf,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAZ,CAAZ;AACD,GAFD;;AAGA,QAAMkB,KAAK,GAAG;AAAEX,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA,aAA7B;AAA4CV,IAAAA;AAA5C,GAAd;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEmB,KAA7B;AAAA,cAAqCN;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  if (cartItems.find((cartItem) => cartItem.id === productToAdd.id)) {\n    return cartItems.map((cartItem) => {\n      return cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem;\n    });\n  } else {\n    return [...cartItems, { ...productToAdd, quantity: 1 }];\n  }\n};\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n    setCartCount(newCartCount);\n  }, cartItems);\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const value = { isCartOpen, setIsCartOpen, addItemToCart, cartItems };\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}