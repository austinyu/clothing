{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\"; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAZRSPA1RD6hjH3ThQ3U_rT32z5rH0Mp1Q\",\n  authDomain: \"crwn-clothing-db-2bfcc.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-2bfcc\",\n  storageBucket: \"crwn-clothing-db-2bfcc.appspot.com\",\n  messagingSenderId: \"1034424385686\",\n  appId: \"1:1034424385686:web:214faace27d46332dfc2b7\"\n}; // Initialize Firebase\n\nconst firebaseapp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nconst db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangeListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"sources":["/Users/Misaka/Vault/Grinnell/2021 Fall/Udemy SQL/React/react-app/clothings/clothing/src/utils/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseapp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangeListener","callback"],"mappings":"AAAA,SACEA,aADF,QAEO,cAFP;AAGA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,EAMEC,0BANF,EAOEC,OAPF,EAQEC,kBARF,QASO,eATP;AAUA,SACEC,YADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,MAJF,QAKO,oBALP,C,CAOA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,wCAFS;AAGrBC,EAAAA,SAAS,EAAE,wBAHU;AAIrBC,EAAAA,aAAa,EAAE,oCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,eALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGpB,aAAa,CAACa,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIjB,kBAAJ,EAAvB;AACAiB,cAAc,CAACC,mBAAf,CAAmC;AACjCC,EAAAA,MAAM,EAAE;AADyB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGvB,OAAO,EAApB;AACP,OAAO,MAAMwB,qBAAqB,GAAG,MACnCtB,eAAe,CAACqB,IAAD,EAAOH,cAAP,CADV;AAEP,OAAO,MAAMK,wBAAwB,GAAG,MACtCxB,kBAAkB,CAACsB,IAAD,EAAOH,cAAP,CADb;AAGP,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEA,OAAO,MAAMmB,0BAA0B,GAAG,gBACxCC,QADwC,EAGrC;AAAA,MADHC,qBACG,uEADqB,EACrB;AACH,QAAMC,UAAU,GAAGrB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;AACA,QAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAD,CAAjC;;AACA,MAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;AAC1B,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA;AAFI,QAGFP,QAHJ;AAIA,UAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAM1B,MAAM,CAACmB,UAAD,EAAa;AACvBI,QAAAA,WADuB;AAEvBC,QAAAA,KAFuB;AAGvBC,QAAAA,SAHuB;AAIvB,WAAGP;AAJoB,OAAb,CAAZ;AAMD,KAPD,CAOE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AACD,SAAOX,UAAP;AACD,CAxBM;AA0BP,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAP,EAAcQ,QAAd,KAA2B;AAC3E,MAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB;AACzB,SAAO,MAAMvC,8BAA8B,CAACmB,IAAD,EAAOY,KAAP,EAAcQ,QAAd,CAA3C;AACD,CAHM;AAIP,OAAO,MAAMC,kCAAkC,GAAG,OAAOT,KAAP,EAAcQ,QAAd,KAA2B;AAC3E,MAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB;AACzB,SAAO,MAAMtC,0BAA0B,CAACkB,IAAD,EAAOY,KAAP,EAAcQ,QAAd,CAAvC;AACD,CAHM;AAIP,OAAO,MAAME,WAAW,GAAG,YAAY,MAAMvC,OAAO,CAACiB,IAAD,CAA7C;AACP,OAAO,MAAMuB,yBAAyB,GAAIC,QAAD,IAAcxC,kBAAkB,CAACgB,IAAD,EAAOwB,QAAP,CAAlE","sourcesContent":["import {\n  initializeApp\n} from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc\n} from \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAZRSPA1RD6hjH3ThQ3U_rT32z5rH0Mp1Q\",\n  authDomain: \"crwn-clothing-db-2bfcc.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-2bfcc\",\n  storageBucket: \"crwn-clothing-db-2bfcc.appspot.com\",\n  messagingSenderId: \"1034424385686\",\n  appId: \"1:1034424385686:web:214faace27d46332dfc2b7\",\n};\n\n// Initialize Firebase\nconst firebaseapp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\nconst db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangeListener = (callback) => onAuthStateChanged(auth, callback);"]},"metadata":{},"sourceType":"module"}