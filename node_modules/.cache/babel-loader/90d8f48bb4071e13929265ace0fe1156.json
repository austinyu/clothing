{"ast":null,"code":"var _jsxFileName = \"/Users/Misaka/Vault/Grinnell/2021 Fall/Udemy SQL/React/react-app/clothings/clothing/src/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  if (cartItems.find(cartItem => cartItem.id === productToAdd.id)) {\n    return cartItems.map(cartItem => {\n      return cartItem.id === productToAdd.id ? { ...cartItem,\n        quantity: cartItem.quantity + 1\n      } : cartItem;\n    });\n  } else {\n    return [...cartItems, { ...productToAdd,\n      quantity: 1\n    }];\n  }\n};\n\nconst removeCartItem = (cartItems, productToRemove) => {\n  const existingCartItems = cartItems.find(cartItem => cartItem.id === productToRemove.id);\n\n  if (existingCartItems.quantity === 1) {\n    return cartItems.filter(item => item.id !== productToRemove.id);\n  }\n\n  return cartItems.map(item => {\n    return item.id === productToRemove.id ? { ...item,\n      quantity: item.quantity - 1\n    } : item;\n  });\n};\n\nconst removeCartProduct = (cartItems, productToRemove) => {\n  return cartItems.filter(item => item.id !== productToRemove.id);\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  removeProductFromCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const removeItemFromCart = productToRemove => {\n    setCartItems(removeCartItem(cartItems, productToRemove));\n  };\n\n  const removeProductFromCart = productToRemove => {\n    setCartItems(removeCartProduct(cartItems, productToRemove));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemFromCart,\n    removeProductFromCart,\n    cartItems,\n    cartCount\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/Misaka/Vault/Grinnell/2021 Fall/Udemy SQL/React/react-app/clothings/clothing/src/contexts/cart.context.jsx"],"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","find","cartItem","id","map","quantity","removeCartItem","productToRemove","existingCartItems","filter","item","removeCartProduct","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","removeProductFromCart","cartCount","CartProvider","children","setCartItems","setCartCount","newCartCount","reduce","total","value"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  if (cartItems.find((cartItem) => cartItem.id === productToAdd.id)) {\n    return cartItems.map((cartItem) => {\n      return cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem;\n    });\n  } else {\n    return [...cartItems, { ...productToAdd, quantity: 1 }];\n  }\n};\n\nconst removeCartItem = (cartItems, productToRemove) => {\n  const existingCartItems = cartItems.find(\n    (cartItem) => cartItem.id === productToRemove.id\n  );\n\n  if (existingCartItems.quantity === 1) {\n    return cartItems.filter((item) => item.id !== productToRemove.id);\n  }\n  return cartItems.map((item) => {\n    return item.id === productToRemove.id\n      ? { ...item, quantity: item.quantity - 1 }\n      : item;\n  });\n};\n\nconst removeCartProduct = (cartItems, productToRemove) => {\n  return cartItems.filter((item) => item.id !== productToRemove.id);\n};\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  removeProductFromCart: () => {},\n  cartCount: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const removeItemFromCart = (productToRemove) => {\n    setCartItems(removeCartItem(cartItems, productToRemove));\n  };\n  const removeProductFromCart = (productToRemove) => {\n    setCartItems(removeCartProduct(cartItems, productToRemove));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemFromCart,\n    removeProductFromCart,\n    cartItems,\n    cartCount,\n  };\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}